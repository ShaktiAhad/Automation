#!/usr/bin/env groovy
import groovy.json.JsonSlurperClassic

def call(){
    env.token = new File("${env.WORKSPACE}/token.txt").text.trim()
    def load_release_info = load "${env.WORKSPACE}/Automation/gcp-poc/Jenkinsfile.util.readJsonfile"
    def existing_agents_list = load "${env.WORKSPACE}/Automation/gcp-poc/Jenkinsfile.util.getExistingAgent"
    def exisitng_agent_name = existing_agents_list()[0]
    def exisitng_agent_id = existing_agents_list()[1]

    if (load_release_info()[4].size() != 0){
        println ("** Start DELETING agent **")
        for (each_agent in load_release_info()[4]){
            if(each_agent in exisitng_agent_name){
                println ("--> Found the agent:${each_agent}")
                def api_url = "https://asia-northeast1-dialogflow.googleapis.com/v3/projects/${PROJECT_NAME}/locations/${LOCATION}/agents"
                def delete_agent_url = "${api_url}/${exisitng_agent_id[each_agent]}"
                println (delete_agent_url)
                def delete_agent = new URL(delete_agent_url).openConnection()
                delete_agent.setRequestProperty("Authorization", "Bearer ${token}")
                delete_agent.setRequestProperty("Content-Type", "application/json")
                delete_agent.setRequestMethod("DELETE")
                delete_agent.setDoOutput(true)
                new JsonSlurperClassic().parseText(delete_agent.inputStream.text)
                println ("--> ${each_agent} agent is deleted")
            }
            else{
                println("--> ${each_agent} doesn't exist.")
            }
        }
    }

}
return this