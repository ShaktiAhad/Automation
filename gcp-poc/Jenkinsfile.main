PREPROD_BUCKET = "dialogflow-bucket-preprod"
PROJECT_NAME = "prerprod-project"
LOCATION = "asia-northeast1"

node('master'){
    properties([
        buildDiscarder(logRotator(daysToKeepStr: '3', numToKeepStr: '3')),
        parameters([
            string(
                name: 'version', 
                defaultValue: 'v0.0.0',
                description: 'release version', 
                trim: true
            )
        ])
    ])

    stage('preparation'){
        println "--> preparation stage"
        cleanWs()
        sh ("git clone https://github.com/ShaktiAhad/Automation.git")
        def fileCheck = load ("Automation/gcp-poc/Jenkinsfile.util.fileCheck")
        fileCheck()
        def gcloud_auth = load ("Automation/gcp-poc/Jenkinsfile.util.tokenCreation")
        gcloud_auth()
    }

    def load_release_info = load ("Automation/gcp-poc/Jenkinsfile.util.readJsonfile")
    if (load_release_info()[0].size() != 0 || load_release_info()[2].size() != 0){
        stage('upload blob file to bucket'){
            println "--> upload blob file to bucket stage"
            def uploadBlobToBucket = load ("Automation/gcp-poc/Jenkinsfile.stage.uploadBlobToBucket")
            uploadBlobToBucket()
        }
    }
    else {println ("--> Nothing to CREATE or UPDATE")}
    if (load_release_info()[0].size() != 0){
        stage('create_agent') {
            println "--> create_agent stage"
            def createAgent = load ("Automation/gcp-poc/Jenkinsfile.stage.createAgent")
            createAgent()

        }
    }
    else {println ("--> Nothing to CREATE")}

    if (load_release_info()[2].size() != 0){
        stage('update_existing_agent'){
            println "--> update_existing_agent stage"
            def updateAgent = load ("Automation/gcp-poc/Jenkinsfile.stage.updateAgent")
            updateAgent()
        }
    }
    else {println ("--> Nothing to UPDATE")}

    if (load_release_info()[4].size() != 0){
        stage('delete_agent'){
            println "--> delete_agent stage"
            def deleteAgent = load ("Automation/gcp-poc/Jenkinsfile.stage.deleteAgent")
            deleteAgent()
        }
    }
    else {println ("--> Nothing to DELETE")}
    stage('workspace cleanup'){
        cleanWs()
    }
}
